---
title: "Sesión 1: Introducción a R y Estadística Descriptiva (I)"
subtitle: "Taller de Métodos y Técnicas de Investigación I [BORRADOR]"
date: "2025-10-21"
format:
  html:
    code-fold: false
    code-tools: true
    toc: true
    toc-depth: 3
---

## Objetivos de la sesión

Al finalizar esta sesión serás capaz de:

- Navegar en la interfaz de RStudio
- Obtener conocimientos básicos sobre R y su lógica de programación
- Crear y manipular objetos básicos en R (vectores, dataframes)
- Importar datos, cargar paquetes, crear funciones de usuario
- Calcular medidas de tendencia central
- Crear tablas de frecuencia simples y de contingencia

---

## 1. Introducción a R y RStudio

### ¿Qué es R?

R es un lenguaje de programación especializado en análisis estadístico y visualización de datos. Es:

- **Gratuito y de código abierto**
- Se ha consolidado en las últimas décadas como una herramienta de primer nivel para el análisis estadístico y programación ([Fernández-Avilés y Montero, 2024](https://cdr-book.github.io/index.html))
- **Potente** para análisis estadísticos complejos
- **Versátil** con miles de paquetes disponibles
- **Reproducible**: tu análisis queda documentado en código :)

### La interfaz de RStudio

RStudio tiene 4 paneles principales:

1. **Editor** (arriba izquierda): Donde escribes tu código en scripts
2. **Consola** (abajo izquierda): Donde se ejecuta el código y ves resultados
3. **Environment** (arriba derecha): Muestra tus objetos/datos cargados
4. **Files/Plots/Help** (abajo derecha): Archivos, gráficos, ayuda

Estos paneles se pueden modificar a comodidad, así como el theme del IDE, el tamaño y fuente de la letra y código, etc. Lo importante no es sólo que aprendas a usar las herramientas que nos entrega RStudio, sino que también lo hagas una herramienta propia para usar R de la manera más cómoda posible. Al final, como R es un *lenguaje* de programación, cada quien puede hablarlo como quiera, con sus mañas y prácticas. 

::: {.callout-tip}
## Consejo
Siempre trabaja con **scripts** (archivos .R o .qmd) en lugar de escribir directo en la consola. Así tu trabajo queda guardado y es reproducible.
:::

Antes de comenzar, cabe aclarar que iremos tratando de exponer el contenido de R no tanto en orden como si fuera solo un curso de R, sino que siguiendo la lógica de un curso de metodología. Para ello, temáticamente, iremos avanzando en función de los contenidos del programa y, *en virtud de ello*, veremos *cómo hacer* esto en R. Ahora bien, no por ello no nos detendremos todo lo que necesiten en algún aspecto de R que quieran profundizar. Recuerden que este curso es para aportarles herramienrtas **metodológicas** para sus investigaciones de Magíster, para las que probablemente tengan que hacer un uso extensivo de R (incluso para investigaciones más cualitativas). 

---

## 2. Conceptos básicos de R

R, ante todo, es "un sistema para **computación estadística**: software de **análisis de datos** y **lenguaje de programación**" ([Cano en Fernández-Avilés y Montero, 2024](https://cdr-book.github.io/ch-110003.html)). Es ampliamente utilizado en investigación y docencia, pero también ha tomado un lugar importante en la industria y el servicio público. 

R nació como una adaptación (en clave software libre y bajo la lógica de programación reproducible) del lenguaje S, complementándolo con un excelente soporte para el uso estadístico ([Wickham y Grolemund, 2023](https://es.r4ds.hadley.nz/01-intro.html)). R tiene una lógica de programación llamada Programación Orientada a Objetos (OOP, por sus cifras en inglés: *object-oriented programming*), el cual permite un polimorfismo muy útil y versatil para programación estadística y que se relaciona con la *encapsulación* de objetos ([Wickham, 2019](https://adv-r.hadley.nz/introduction.html)). Más allá de tecnicismos, veremos todo esto en el curso, con ejemplos aplicados a sus investigaciones del Magíster.   

### Preparación

```{r}
#| label: setup
#| message: false
#| warning: false

# Cargar librerías necesarias
library(tidyverse)  # Para manipulación de datos
library(psych)      # Para estadística descriptiva
library(sjmisc)     # Para explorar datos
library(haven)      # Para cargar archivos .dta o .sav
library(kableExtra) # Para presentacion de resultados

# Configuración
options(scipen = 999)  # Evitar notación científica
```

### Operaciones básicas

R funciona como una calculadora avanzada:

```{r}
#| label: operaciones-basicas

# Operaciones aritméticas
5 + 3
10 - 2
4 * 6
20 / 4
2^3  # Potencia

# R respeta el orden de operaciones
(5 + 3) * 2
```

### Crear objetos

En R guardamos información en **objetos** usando `<-`:

```{r}
#| label: crear-objetos

# Crear un objeto numérico
edad <- 25
edad

# Crear un vector (secuencia de valores)
edades <- c(23, 25, 28, 30, 22, 27)
edades

# Operaciones con vectores
mean(edades)    # Promedio
length(edades)  # Largo del vector
```

::: {.callout-note}
## Nota importante
Los nombres de objetos:
- Pueden contener letras, números, `.` y `_`
- NO pueden empezar con números
- R distingue entre mayúsculas y minúsculas (`edad ≠ Edad`), lo que se suele conocer como un lenguaje *key-sensitive*
:::

#### Crear objetos: vectores y matrices

Guardar objetos también nos permite hacer operaciones matemáticas más complejas, por ejemplo para el uso de una calculadora de algebra lineal. También se pueden hacer simulaciones, con una distribución deseada, para hacer más interesante nuestras operaciones. Veamos primero la creación de objetos y luego operaciones más complejas

```{r algebra-lineal-objetos, collapse=TRUE}
#| label: algebra-lineal-objetos

# a) Creación de un vector de números naturales del 1 al 8
vector1 <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 25, 44, 36, 20, 50, 88)
vector1

# b) Creación de un vector con números reales comprendidos entre 1 y 6
set.seed(123)
vector2 <- runif(60, 1, 6)
vector2

# c) Creación de un vector con números que provienen de una distribución normal
vector3 <- rnorm(30, 0, 2)
vector3

# d) Creación de un vector con caracteres (letras)
vector4 <- c("Lima", "Ucayali", "Loreto", "San Juan", "Pucallpa")
vector4

# e) Creación de un vector que combine números y texto
vector5 <- c("rojo", 3, "Azul", 7, "morado", 10)
vector5

#OTRO CASOS CON VECTORES
#a) Crea un vector con los primeros 20 números pares.
vector1 <- seq(2, 40, by = 2)
vector1

#b) Simular 50 valores entre 5 y 15, pero solo números enteros (valores repetidos).
vector2 <- sample(5:15, 50, replace = TRUE)
vector2

# Simular 50 valores entre 5 y 150, pero solo números enteros (valores no repetidos).
vector2 <- sample(5:150, 50, replace = FALSE)
vector2
# Crear un vector con categorías de satisfacción (Baja, Media, Alta) y conviértelo en 
#factor ordenado.
vector3 <- factor(sample(c("Baja", "Media", "Alta"), 30, replace = TRUE), 
                  levels = c("Baja", "Media", "Alta"), 
                  ordered = TRUE)
vector3

# Generar un vector con los primeros 15 valores de una progresión geométrica de razón 3.
vector4 <- 2*(3/11)^(0:14)
vector4

# Generar 100 valores de un proceso AR(1):
#Xt=0.7Xt-1+et donde et~N(0,1)
set.seed(123)
vector5 <- numeric(100)
vector5[1] <- rnorm(1)
for (t in 2:100) {
  vector5[t] <- 0.7 * vector5[t-1] + rnorm(1)
}
vector5

#--Graficar la serie de tiempo
plot.ts(vector5, col="#7F000D", main="Proceso AR(1)")

```

¿Y si quisieramos operaciones con vectores? Hagamos un ejercicio. Sean los vectores $A$ y $B$, ambos con la misma cantidad de números aleatorios. El vector $A$ contiene datos que provienen de una distribución chi-cuadrada con 3 grados de libertad (gl), mientras que el vector $B$ contiene datos que provienen de una distribución uniforme definida en el intervalo $[3, 5]$. Entonces, hallemos con R la solución a los siguientes cálculos: 

1. $2A+5B$

2. $\sin(A)+\cos(B)−\tan(A+B)$

3. $\sqrt[3]{A} + \exp(B) - 4B^2$

4. $\log(A+1)+B^3-10 \sqrt{B}$

```{r algebra-lineal-operaciones, collapse=TRUE}
#| label: algebra-lineal-objetos-operaciones

# Definimos objetos para la creación de los objetos según instrucciones
n=80
A<-rchisq(n,3) # Distribución Chi-Cuadrada con 3 gl
B<-runif(n,3,5) # Distribución uniforme [3,5]

# Hallar los siguientes cálculos:
#1) 2A+5B
R1 <- 2*A + 5*B
R1

#2) sin(A)+cos(B)−tan(A+B)
R2 <- sin(A) + cos(B) - tan(A + B)
R2

#3) raiz_cúbica(A) + exp(B) - 4B^2
R3 <- A^(1/3) + exp(B) - 4*B^2
R3

#4) log(A+1)+B^3-10raiz(B)
R4 <- log(A + 1) + B^3 - 10*sqrt(B)
R4

```

¡¡¿¿¿Y matrices??!! Podemos hacerlo de distintas maneras: 

```{r algebra-matricial, collapse=TRUE}
#| label: algebra-matricial

# 1️⃣ Declaración de Matrices en R (Forma Manual))
A <- matrix(c(6,5,4,1.2,6,4,7,7,8,2.5,1.15,6,4,5,7,3), nrow=4, byrow=TRUE)
A

B <- matrix(c(5, sqrt(7), exp(2), 7, -1/7, 6), nrow=2, byrow=TRUE)
B



#2️⃣ Declaración de Matrices Aleatoriass
A <- matrix(rnorm(36), nrow=6)  # 6×6 con distribución normal estándar
A

B <- matrix(runif(25, 7, 20), nrow=5)  # 5×5 con distribución uniforme en [7,20]
B

C <- diag(rnorm(16,6,1.75), nrow=4)  # 4×4 con valores en la diagonal
C


D <- diag(1, nrow=5)  # Matriz identidad de orden 5
D

E <- diag(0, nrow=5)  # Matriz nula de orden 5
E

G <- diag(rnorm(5))  # Matriz diagonal
G[upper.tri(G)] <- rnorm(5)  # Convertir en matriz triangular superior
G

G <- diag(rnorm(5))
G[lower.tri(G)] <- rnorm(5)  # Convertir en matriz triangular inferior
G

```


Con ello, podemos hacer las siguiente operaciones: 

```{r algebra-matricial-operaciones, collapse=TRUE}
#| label: algebra-matricial-operaciones

#3️⃣ Transpuesta de una Matriz
A <- matrix(rnorm(36,3,0.2), nrow=9)
A
t(A)  # Transpuesta

#4️⃣ Traza de una Matriz
A <- matrix(rnorm(25), nrow=5)
A
traza <- sum(diag(A))
paste("La traza es:", traza)


#5️⃣ Suma de Matrices
A <- matrix(rnorm(30), nrow=6)
B <- matrix(rnorm(30,5,2), nrow=6)
A + B  # Suma de matrices

#6️⃣ Producto de un Escalar por una Matriz
C <- matrix(rnorm(40,6,1), nrow=8)
sqrt(7) * C  # Producto con un escalar

A <- matrix(runif(42), nrow=7)
B <- matrix(runif(42,4,6), nrow=7)
P <- 2.35 * A + log(13) * B  # Combinación lineal de matrices
P

#7️⃣ Multiplicación de Matrices
A <- matrix(runif(30,1,3), nrow=5)  # 5×6
B <- matrix(runif(30,2,9), nrow=6)  # 6×5
A %*% B  # Producto de matrices
(1/2*A) %*% (exp(3)*B)
(1/17*B) %*% (4*A)

#8️⃣ Determinante de una Matriz
A <- matrix(runif(36,1,10), nrow=6)
A
det(A)  # Determinante de la matriz

#9️⃣ Rango de una Matriz
A <- matrix(runif(25,10,36), nrow=5)
A
qr(A)$rank  # Rango de la matriz


B <- matrix(runif(28,9,100), nrow=7)
B
qr(B)$rank


#🔟 Inversa de una Matriz
A <- matrix(runif(36,0,10), nrow=6)
A
inv <- solve(A)  # Inversa de la matriz
inv
round(A %*% inv)  # Verificación: debe aproximarse a la matriz identidad

```


Incluso podríamos calcular MCO matricialmente^[La expresión $\hat{\beta} = (X^\top X)^{-1} X^\top y$ se puede demostrar, pero no es objeto de esta clase (ni curso)]. Solo tendríamos que seguir la expresión que se obtiene al derivar los estimadores MCO con notación matricial, es decir, 
$$
\hat{\beta} = (X^\top X)^{-1} X^\top y
$$
donde nuestra variable dependiente es un vector-columna de $n\times 1$ dimensiones; los parámetros $\beta$ también son un vector columna $k+1\times 1$ dimensiones; las variables independientes son una matriz de $n\times k+1$ dimensiones; y los residuos del modelo son de $n\times 1$ dimensiones. De manera tal que se tiene 
$$
Y_{n\times 1} = \begin{bmatrix}
Y_1 \\
Y_2 \\
\vdots \\
Y_n
\end{bmatrix}, \quad 
X_{n\times (k+1)} =
\begin{bmatrix}
1 & X_{11} & a_{12} & \cdots & a_{1k} \\
1 & X_{21} & a_{22} & \cdots & a_{2k} \\
\vdots & \vdots & \vdots & \ddots & \vdots \\
1 & X_{n1} & a_{n2} & \cdots & a_{nk}
\end{bmatrix},
\quad
\beta_{k+1\times 1} =
\begin{bmatrix}
\beta_0 \\
\beta_1 \\
\vdots \\
\beta_k
\end{bmatrix}, 
\quad
U_{n\times 1} =
\begin{bmatrix}
U_1 \\
U_2 \\
\vdots \\
U_n
\end{bmatrix}
$$

Simulemos, entonces, un caso conocido: la ecuación de Mincer. Un ejemplo relativamente básico de esta sería el siguiente: 
$$
\ln \text{salario}_i = \ln \beta_0 + \beta_1 \text{educ}_i +\beta_2 \text{exp}_i+\beta_3 \text{exp}_i^2+ \beta_4 \text{dummy-mujer}_i + u_i
$$
donde la variable dependiente es salario del individuo $i$, a la cual se le aplica un logaritmo natural; $\beta_0$ es el intercepto (salario de alguien sin educación ni experiencia (ni mujer)); $\text{educ}_i$ es la variable que registra los años de escolaridad del individuo $i$; $\text{exp}_i$ es la variable que contiene la experiencia laboral del individuo $i$; $\text{dummy-mujer}_i$ es una variable que identifica si $i$ es mujer o no; y $u_i$ es el término de error. Veamos cómo podríamos hacer esto en R con una simulación: 


```{r MCO-matrices, collapse=TRUE}
#| label: MCO-matricial

# MCO "a mano" (solo betas) + comparación con lm()
set.seed(2025)

# 1) Simulación tipo Mincer
n <- 1000
esc   <- pmax(0, round(rnorm(n, 12, 2)))
exp   <- pmax(0, round(rnorm(n, 15, 5)))
mujer <- rbinom(n, 1, 0.45)

b0 <- 1.5; b_esc <- 0.08; b_exp <- 0.10; b_exp2 <- -0.002; b_muj <- -0.20
eps <- rnorm(n, 0, 0.30)
y <- b0 + b_esc*esc + b_exp*exp + b_exp2*(exp^2) + b_muj*mujer + eps  # log ingreso

# 2) Matriz de diseño y vector
X <- cbind(1, esc, exp, exp^2, mujer) # Matriz X
colnames(X) <- c("(Intercept)", "esc", "exp", "exp2", "mujer")

# 3) Betas por álgebra matricial:  β̂ = (X'X)^(-1) X'y
beta_hat <- solve(t(X) %*% X) %*% (t(X) %*% y) 

# 4) Comparación con lm()
beta_lm <- coef(lm(y ~ esc + exp + I(exp^2) + mujer))

# 5) Mostrar lado a lado
out <- cbind(beta_manual = as.numeric(beta_hat), beta_lm = as.numeric(beta_lm))
rownames(out) <- colnames(X)
round(out, 6)


```


### Tipos de datos

No obstante, para todo ello, ¡hay que aprender R! Probablemente muchxs de ustedes ya saben algo de R. A su vez, si saben R pero no como derivar MCO no se preocupen, no es necesario saber esto para hacer una regresión en R. Es más, como vieron, `lm()` que es la función más básica para realizar regresiones lineales en R realiza la operación matricial que hicimos en una sola línea de código (`lm(y ~ esc + exp + I(exp^2) + mujer)`). Todo lo anterior, por tanto, fueron ejemplos de cosas que se pueden hacer en R, utilizándolo más "en bruto" y para que puedan visualizar su potencial. 

Pero volvamos a R. Los objetos de R tienen distintas "clases". Para efectos del curso, podemos pensar esto como la naturaleza de variables, i.e., como variables cuantitativas (discretas y continuas) y cualitativas (ordinales y nominales). Los objetos de R tienen categorías similares. Pero también tienen combinaciones, como los objetos `dbl+lbl`, que son numéricos y con etiquetas. Adicionalmente, también podemos encontrar datos de tipo lógico (`TRUE` y `FALSE`). 

```{r, collapse=TRUE}
#| label: tipos-datos

# Numérico
numero <- 42
class(numero)

# Carácter (texto)
nombre <- "María"
class(nombre)

# Lógico
es_estudiante <- TRUE
class(es_estudiante)

# Factor (categorías)
nivel_educacion <- factor(c("Básica", "Media", "Superior", "Media"))
nivel_educacion
```

---

## 3. Trabajar con DataFrames

Los **dataframes** son tablas de datos, similares a hojas de Excel. Cada columna es una variable, cada fila es una observación. Es en este formato en el que trabajaremos con bases de datos reales. 

### Crear un dataframe

```{r}
#| label: crear-dataframe

# Crear un dataframe desde vectores
estudiantes <- data.frame(
  nombre = c("Ana", "Bruno", "Carla", "Diego", "Elena"),
  edad = c(23, 25, 24, 26, 23),
  carrera = c("Sociología", "Sociología", "Antropología", 
              "Sociología", "Antropología"),
  nota = c(6.5, 5.8, 6.9, 6.2, 7.0)
)

# Ver el dataframe
estudiantes
```

Pero partamos inmediatamente con bases de datos reales. Tomemos la Encuesta Nacional de Empleo, realizada por el INE mes a mes y que agrupa datos trimestrales. Para ello, utilizaremos la función `read.csv()`, del paquete `utils`, pues las bases de datos vienen en formato `.csv`. Una vez que cargamos los datos, exploraremos nuestra base de datos. No obstante, conviene saber antes que los archivos `.csv` son archivos de texto, que generalmente hay que especificar el delimitador que usa para separar las columnas (`;` o `,` comúnmente). 

```{r}
#| label: cargar-ene

datos <- read.csv("data-sesiones/ene-2025-07-jja.csv", # Ruta
                  sep=",", # Delimitador
                  encoding = "UTF-8" # UTF-8 o Latin-1
                  )

head(datos) # UPS

datos <- read.csv("data-sesiones/ene-2025-07-jja.csv", # Ruta
                  sep=";", # Delimitador
                  encoding = "Latin-1", # UTF-8 o Latin-1
                  stringsAsFactors = F # character to factor
                  ) 

head(datos) # :D
```




### Explorar datos

```{r , collapse=TRUE}
#| label: explorar-datos

# Estructura del dataframe
str(datos)

# Estructura con glimpse
glimpse(datos)

# Dimensiones (filas x columnas)
dim(datos)


```

### Explorar variables

En el formato `data.frame`, las columnas son las variables y las filas son las observaciones, i.e., la información de cada persona encuestada para cada variable (columna). En este sentido, a través de la fila vemos lo que respondió cada informante en las preguntas que se les realizó en la determinada encuesta (o en las variables derivadas del cuestionario). Por ello, conviene revisar los manuales metodológicos, los libros de códigos, los cuestionarios, etc., de la encuesta que estemos usando. Para nuestro caso, revisando el [Libro de Códigos de la ENE](https://www.ine.gob.cl/docs/default-source/ocupacion-y-desocupacion/metadatos/2020/encuesta-nacional-de-empleo---año-de-referencia-2020.pdf?sfvrsn=bc1fb0e6_8), podríamos revisar las siguientes variables:

```{r , collapse=TRUE}
#| label: acceder-variables

# Acceder a una columna específica con $
estudiantes$edad

# Otra forma: usando corchetes
estudiantes[, "edad"]


# Ahora con funciones de R y variables de la ENE 
# Condición de actividad (Ocupados (1), Desocupado (2) y Fuerza de la FDT (3))
frq(datos$activ) # Proporción de activ

# Clasificación Internacional de Nivel Educacional (CINE) 1997
frq(datos$cine97) # Proporción CINE 97

# Condición de actividad económica general
## Ver categorias en documento
frq(datos$cae_general)
```

::: {.callout-tip}
## Tip: Rutas relativas
Usa rutas relativas desde tu archivo .R:
- `../data/archivo.csv` (sube una carpeta, entra a data)
- Nunca uses `C:/Mi Computador/...` (no funcionará en otros computadores)
:::

Obviamente, como son muy astutxs, ya se estarán preguntando si se pueden hacer análisis más refinados. Ciertamente sí, y eso iremos viendo a lo largo del curso y también en esta sesión. Pero por poner un ejemplo, la ENE se utiliza para para calcular indicadores como la tasa de ocupación, desempleo, de participación, de ocupación informal, etc. Aunque aún no veremos cómo hacerlo estimando nuestra muestra a nivel poblacional (con muestras complejas (`survey` y `srvyr`)).

La ENE calcula la tasa de ocupación como 
$$
\text{Tasa de ocupacion} = \frac{\text{Ocupados/as}}{\text{Poblacion en edad de trabajar}} \times 100
$$
Como ya les parecerá obvio por su astucia, vimos una variable que nos permitiría cómo calcular esto: `activ`. Dado que `1. Ocupados/as`, entonces, solo habría que

```{r , collapse=TRUE}
#| label: tasa-ocupacion

## Tasa de ocupación muestral (sin survey)
## Requiere en 'datos' las variables: activ (1=ocupado, 2/3=no (o sea PET)) y edad

# 1) Variables auxiliares equivalentes a Stata
datos$oc    <- ifelse(datos$activ == 1, 1, 0)        # ocupado
datos$may15 <- ifelse(datos$edad  >= 15, 1, 0)       # PET potencial (15+)

# 2) Tasa de ocupación (toc)
datos$toc <- ifelse(datos$may15 == 1, datos$oc, NA_real_)

# 3) Estimación muestral de la tasa de ocupación (subpoblación edad>=15)
numerador   <- sum(datos$oc  [datos$may15 == 1 & !is.na(datos$activ)], na.rm = TRUE)
denominador <- sum(          datos$may15 == 1 & !is.na(datos$activ))
toc_muestra <- numerador / denominador

toc_muestra                    # proporción
toc_muestra * 100              # porcentaje


```

Esto significaría que, a nivel muestral, la tasa de ocupación es del 51,36%. Pero, antes de pasar un procesamiento más refinado de los datos, para justamente obtener indicadores y análisis estadísticos mejores, hay que mencionar que el código anterior podría estar mucho más optimizado. ¿Cómo? Con nuestro nuevo amigo que nos acompañará todo el curso: `dplyr`, paquete dentro de `tidyverse`. Con él, y sus funciones, podremos calcular la tasa de ocupación (muestral) con una línea de código concateando procesos con `|>` (o `%>%` que viene en `magritrr`, también paquete incluido en `tidyverse`): 

```{r, collapse=TRUE}
#| label: tasa-ocup-dplyr

toc_muestra <- datos |>
  mutate(oc = activ == 1, # Creamos ocupado (oc) y mayores de 15 (may15)
         may15 = edad >= 15) |>  
  filter(may15, !is.na(activ)) |>  # Filtramos mayores de 15 y sin NA en activ
  summarise(toc = mean(oc)) |> # Calculamos promedio de ocupados
  pull(toc)   # Extraemos el valor numérico

toc_muestra          # Proporción
toc_muestra * 100    # Porcentaje


```


Dicho esto, es momento de avanzar en nuestro análisis exploratorio de datos usando una base que nos permita profundizar en estadística descriptiva. Para ello, trabajaremos con la **Encuesta Suplementaria de Ingresos (ESI)**, que es un módulo complementario de la ENE aplicado anualmente en el trimestre noviembre-enero.

---

## 4. Trabajando con la Encuesta Suplementaria de Ingresos (ESI)

### ¿Qué es la ESI?

La Encuesta Suplementaria de Ingresos (ESI) es un módulo de la ENE que se aplica una vez al año y tiene como objetivo principal caracterizar los ingresos de las personas y los hogares en Chile. Esta encuesta nos permite, entre otras cosas:

- Analizar la distribución de ingresos en la población
- Estudiar brechas salariales por género, edad, nivel educacional
- Examinar la relación entre educación y ingresos
- Comprender la estructura de ingresos laborales

Para nuestros propósitos metodológicos, esta base es ideal porque contiene variables tanto cuantitativas (edad, ingresos) como cualitativas (sexo, nivel educacional, condición de actividad), lo que nos permitirá aplicar las distintas herramientas de estadística descriptiva que aprenderemos.

### Cargando la base de datos

Cargaremos la ESI 2024 directamente desde el sitio web del INE. Usaremos el paquete `haven` para leer archivos en formato Stata (.dta):

```{r}
#| label: cargar-esi-completo
#| message: false
#| warning: false

# Cargar la ESI 2024 desde el INE
esi2024 <- haven::read_dta("https://www.ine.gob.cl/docs/default-source/encuesta-suplementaria-de-ingresos/bbdd/stata_esi/2024/esi_2024.dta?sfvrsn=627c0f59_4&download=true")

# Explorar la estructura
esi2024 |> 
  glimpse()
```

Como pueden observar, la base contiene 85.172 observaciones y 282 variables. Para este ejercicio, trabajaremos con un subconjunto de variables que nos permitirán realizar análisis descriptivos básicos.

### Selección y preparación de variables

Para facilitar nuestro trabajo, seleccionaremos y renombraremos algunas variables clave. Adicionalmente, filtraremos la base de datos para observaciones que cumplan con 1) estar ocupados y 2) tener ingreso totales del trabajo. Finalmente, re-escribiremos sobre la base de datos, algo que no es recomendable, pero dado que no volveremos a usar `esi2024` no habrá problemas en este caso. 

```{r}
#| label: preparar-esi
#| message: false

# Seleccionar y preparar variables de interés
esi2024 <- esi2024 |> 
  select(
    sexo,           # Sexo de la persona
    edad,           # Edad en años cumplidos
    nivel,          # Nivel educacional más alto alcanzado
    ing_t_t,        # Ingreso total del trabajo
    activ,          # Condición de actividad
    region          # Región de residencia
  ) |> 
  # Filtrar solo personas ocupadas con ingresos válidos
  filter(
    activ == 1,           # Solo ocupados
    !is.na(ing_t_t),      # Con dato de ingreso
    ing_t_t > 0           # Ingresos positivos
  ) |> 
  # Crear etiquetas descriptivas
  mutate(
    # Etiqueta para sexo
    sexo_etiq = case_when(
      sexo == 1 ~ "Hombre",
      sexo == 2 ~ "Mujer",
      TRUE ~ "Otro"
    ),
    # Recodificar nivel educacional en categorías agregadas
    nivel_etiq = case_when(
      nivel == 0 ~ "Sin educación",
      nivel %in% c(1, 2, 3) ~ "Secundaria incompleta",
      nivel %in% c(4, 5, 6) ~ "Secundaria completa",
      nivel %in% c(7, 8, 9) ~ "Superior",
      nivel %in% c(10, 11, 12) ~ "Postgrado",
      TRUE ~ "Otros"
    ),
    nivel_etiq = factor(nivel_etiq, levels = c(
      "Sin educación", "Secundaria incompleta", "Secundaria completa",
      "Superior", "Postgrado", "Otros"
    ))
  )

# Verificar dimensiones de la base filtrada
dim(esi2024)


```

::: {.callout-note}
## Nota sobre el filtrado
Hemos filtrado la base para trabajar solo con personas **ocupadas** (`activ == 1`) que reportan ingresos del trabajo válidos. Esto es importante porque:

1. Los ingresos del trabajo solo aplican a personas que trabajan
2. Los valores `NA` o cero en ingresos podrían indicar no respuesta o situaciones especiales
3. Para análisis de brechas salariales, necesitamos comparar personas que efectivamente están en el mercado laboral
:::

---

## 5. Estadística Descriptiva: Medidas de Tendencia Central

La estadística descriptiva nos permite resumir y organizar grandes volúmenes de datos en medidas que facilitan su comprensión. Comenzaremos con las **medidas de tendencia central**, que nos indican dónde se "centra" la distribución de nuestros datos.

### 5.1 La Media (Promedio)

La media aritmética es la medida de tendencia central más utilizada. Se calcula sumando todos los valores y dividiendo por el número de observaciones:

$$
\bar{x} = \frac{\sum_{i=1}^{n} x_i}{n}
$$

En R, la función `mean()` nos permite calcularla fácilmente:

```{r}
#| label: media-ingresos

# Ingreso promedio mensual
ingreso_promedio <- mean(esi2024$ing_t_t, na.rm = TRUE)

# Mostrar con formato
paste("El ingreso promedio mensual es:", 
      scales::dollar(ingreso_promedio, big.mark = ".", 
                     decimal.mark = ",", prefix = "$"))
```

La media es útil porque **usa toda la información disponible** (cada observación contribuye al cálculo). Sin embargo, tiene una limitación importante: **es sensible a valores extremos** (outliers).

### 5.2 La Mediana

La mediana es el valor que divide la distribución en dos mitades iguales: 50% de las observaciones están por debajo y 50% por encima. Es más **robusta** a valores extremos que la media.

```{r}
#| label: mediana-ingresos

# Ingreso mediano mensual
ingreso_mediano <- median(esi2024$ing_t_t, na.rm = TRUE)

paste("El ingreso mediano mensual es:", 
      scales::dollar(ingreso_mediano, big.mark = ".", 
                     decimal.mark = ",", prefix = "$"))
```

### 5.3 Comparación: Media vs Mediana

Comparemos ambas medidas:

```{r}
#| label: comparacion-media-mediana

# Crear tabla comparativa
tibble(
  Medida = c("Media", "Mediana", "Diferencia", "% Diferencia"),
  Valor = c(
    scales::dollar(ingreso_promedio, big.mark = ".", decimal.mark = ",", prefix = "$"),
    scales::dollar(ingreso_mediano, big.mark = ".", decimal.mark = ",", prefix = "$"),
    scales::dollar(ingreso_promedio - ingreso_mediano, big.mark = ".", decimal.mark = ",", prefix = "$"),
    paste0(round(((ingreso_promedio - ingreso_mediano)/ingreso_mediano)*100, 1), "%")
  )
) |> 
  kable(caption = "Comparación entre media y mediana de ingresos")
```

**Interpretación:** La diferencia entre media y mediana nos indica que la distribución de ingresos está **sesgada hacia la derecha** (positivamente). Esto significa que hay algunas personas con ingresos muy altos que "arrastran" la media hacia arriba, mientras que la mediana nos da una mejor idea del ingreso "típico" de una persona en Chile. En cualquier caso, conviene comparar ambas medidas, pues nos entrega información sobre la distribución de nuestra variable. 

::: {.callout-important}
## ¿Cuándo usar media o mediana?

- **Usa la media** cuando:
  - La distribución es aproximadamente simétrica
  - No hay valores extremos (outliers)
  - Necesitas usar toda la información disponible (ej: calcular promedios)

- **Usa la mediana** cuando:
  - La distribución tiene sesgo (asimétrica)
  - Hay valores extremos que pueden distorsionar la media
  - Quieres saber el valor "típico" (ej: salario mediano)
:::

En la siguiente sesión veremos más medidas títpicas de la estadística descriptiva. Pero, por ahora, quedemonos con estas dos y veamos qué podemos hacer con ellas en R.


### 5.4 Visualizando media y mediana

Un histograma nos ayuda a visualizar esta diferencia:

```{r}
#| label: fig-dist-ingresos
#| fig-cap: "Distribución de ingresos del trabajo con media y mediana"
#| fig-width: 10
#| fig-height: 6
#| warning: false

# Crear histograma con líneas de tendencia central
esi2024 |> 
  ggplot(aes(x = ing_t_t)) +
  geom_histogram(bins = 50, fill = "#2A5783", alpha = 0.7, color = "white") +
  geom_vline(aes(xintercept = ingreso_promedio, color = "Media"), 
             linewidth = 1.2, linetype = "dashed") +
  geom_vline(aes(xintercept = ingreso_mediano, color = "Mediana"), 
             linewidth = 1.2, linetype = "dashed") +
  scale_x_continuous(
    labels = scales::dollar_format(big.mark = ".", decimal.mark = ",", prefix = "$"),
    limits = c(0, 3000000)  # Limitar eje x para mejor visualización
  ) +
  scale_color_manual(
    name = "Medidas de\ntendencia central",
    values = c("Media" = "#9C0824", "Mediana" = "#09622A")
  ) +
  labs(
    title = "Distribución de Ingresos del Trabajo en Chile (ESI 2024)",
    subtitle = "Solo personas ocupadas con ingresos reportados",
    x = "Ingreso mensual del trabajo",
    y = "Frecuencia (número de personas)",
    caption = "Fuente: INE, Encuesta Suplementaria de Ingresos 2024"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14),
    legend.position = "right"
  )
```

**Observaciones del gráfico:**
- La mayoría de las personas se concentra en ingresos más bajos
- La distribución tiene una "cola" hacia la derecha (ingresos altos)
- La mediana (línea verde) está más cerca del centro de la concentración de personas
- La media (línea roja) está desplazada hacia la derecha por efecto de los ingresos altos

---

## 6. Análisis por grupos: Estadística descriptiva bivariada

Una de las aplicaciones más útiles de la estadística descriptiva es **comparar grupos**. Por ejemplo, ¿existen diferencias en los ingresos según el sexo de las personas? ¿O según su nivel educacional?

### 6.1 Ingresos por sexo

Calculemos las medidas de tendencia central separadas por sexo:

```{r}
#| label: ingresos-por-sexo

# Estadísticas por sexo
esi2024 |> 
  group_by(sexo_etiq) |> 
  summarise(
    n = n(),
    Media = mean(ing_t_t, na.rm = TRUE),
    Mediana = median(ing_t_t, na.rm = TRUE),
    .groups = "drop"
  ) |> 
  mutate(
    Media = scales::dollar(Media, big.mark = ".", 
                           decimal.mark = ",", prefix = "$"),
    Mediana = scales::dollar(Mediana, big.mark = ".", decimal.mark = ",", prefix = "$")
  ) |> 
  kable(
    caption = "Ingresos del trabajo por sexo",
    col.names = c("Sexo", "N", "Ingreso Promedio", "Ingreso Mediano")
  )
```

::: {.callout-warning}
## Brecha salarial de género
Los datos muestran una diferencia significativa en los ingresos entre hombres y mujeres. Esta es la llamada **brecha salarial de género**, un fenómeno persistente en Chile y el mundo que tiene múltiples causas (segregación ocupacional, discriminación, interrupciones en trayectorias laborales, etc.).
:::

### 6.2 Visualización de la brecha

Podemos visualizar esta diferencia con un boxplot:

```{r}
#| label: fig-boxplot-sexo
#| fig-cap: "Distribución de ingresos por sexo"
#| fig-width: 10
#| fig-height: 6
#| warning: false

esi2024 |> 
  ggplot(aes(x = sexo_etiq, y = ing_t_t, fill = sexo_etiq)) +
  geom_boxplot(alpha = 0.7, outlier.alpha = 0.3) +
  scale_y_continuous(
    labels = scales::dollar_format(big.mark = ".", decimal.mark = ",", prefix = "$"),
    limits = c(0, 2500000)
  ) +
  scale_fill_manual(values = c("Hombre" = "#4292c6", "Mujer" = "#ef3b2c")) +
  labs(
    title = "Distribución de Ingresos del Trabajo por Sexo",
    subtitle = "Chile, 2024",
    x = NULL,
    y = "Ingreso mensual del trabajo",
    caption = "Fuente: INE, ESI 2024\nNota: Se excluyen outliers extremos para mejor visualización"
  ) +
  theme_minimal() +
  theme(
    legend.position = "none",
    plot.title = element_text(face = "bold", size = 14)
  )
```

**Lectura del boxplot:**
- La línea horizontal dentro de la caja es la **mediana**
- Los bordes de la caja representan el **25% y 75%** de los datos (rango intercuartílico)
- Los "bigotes" se extienden hasta aproximadamente 1.5 veces el rango intercuartílico
- Los puntos son **valores atípicos** (outliers)

---

## 7. Tablas de frecuencia con datos reales

Las tablas de frecuencia son fundamentales para resumir variables categóricas. Veamos algunos ejemplos con la ESI.

### 7.1 Distribución por nivel educacional

```{r}
#| label: tabla-educacion

# Tabla de frecuencias
tabla_educ <- esi2024 |> 
  count(nivel_etiq, name = "Frecuencia") |> 
  mutate(
    Porcentaje = round((Frecuencia / sum(Frecuencia)) * 100, 1),
    `Porcentaje acumulado` = cumsum(Porcentaje)
  )

tabla_educ |> 
  kable(
    caption = "Distribución de personas ocupadas por nivel educacional",
    col.names = c("Nivel Educacional", "Frecuencia", "Porcentaje", "% Acumulado")
  )
```

### 7.2 Visualización de la distribución educacional

```{r}
#| label: fig-educacion
#| fig-cap: "Distribución de nivel educacional"
#| fig-width: 10
#| fig-height: 7
#| warning: false

esi2024 |> 
  filter(!is.na(nivel_etiq)) |> 
  count(nivel_etiq) |> 
  mutate(
    porcentaje = (n / sum(n)) * 100,
    nivel_etiq = fct_reorder(nivel_etiq, n)
  ) |> 
  ggplot(aes(x = nivel_etiq, y = porcentaje)) +
  geom_col(fill = "#E9C6EF", alpha = 0.8) +
  geom_text(aes(label = paste0(round(porcentaje, 1), "%")), 
            hjust = -0.2, size = 3.5) +
  coord_flip() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Deja espacio para etiquetas
  labs(
    title = "Distribución de Personas Ocupadas por Nivel Educacional",
    subtitle = "Chile, 2024",
    x = NULL,
    y = "Porcentaje",
    caption = "Fuente: INE, ESI 2024"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14),
    panel.grid.major.y = element_blank()
  )
```

### 7.3 Tabla de contingencia: Sexo x Nivel educacional

Las **tablas de contingencia** (o tablas cruzadas) nos permiten analizar la relación entre dos variables categóricas:

```{r}
#| label: tabla-contingencia-sexo-educ

# Tabla de contingencia
tabla_sexo_educ <- esi2024 |> 
  filter(!is.na(nivel_etiq)) |> 
  count(sexo_etiq, nivel_etiq) |> 
  pivot_wider(names_from = sexo_etiq, values_from = n, values_fill = 0)

tabla_sexo_educ |> 
  kable(caption = "Distribución de nivel educacional por sexo")
```

Podemos también ver las proporciones por fila (qué % de cada nivel educacional es hombre/mujer):

```{r}
#| label: proporciones-sexo-educ

# Proporciones por fila
esi2024 |> 
  filter(!is.na(nivel_etiq)) |> 
  count(nivel_etiq, sexo_etiq) |> 
  group_by(nivel_etiq) |> 
  mutate(
    prop = n / sum(n) * 100
  ) |> 
  select(-n) |> 
  pivot_wider(names_from = sexo_etiq, values_from = prop, values_fill = 0) |> 
  mutate(across(where(is.numeric), ~round(.x, 1))) |> 
  kable(
    caption = "Distribución porcentual por sexo dentro de cada nivel educacional",
    col.names = c("Nivel Educacional", "% Hombres", "% Mujeres")
  )
```

---

## 8. Ingresos por nivel educacional

Un análisis clásico en economía laboral es examinar cómo los ingresos varían según el nivel educacional (el **retorno** a la educación):

```{r}
#| label: ingresos-por-educacion

# Ingresos promedio por nivel educacional
esi2024 |> 
  filter(!is.na(nivel_etiq)) |> 
  group_by(nivel_etiq) |> 
  summarise(
    n = n(),
    Ingreso_Promedio = mean(ing_t_t, na.rm = TRUE),
    Ingreso_Mediano = median(ing_t_t, na.rm = TRUE),
    .groups = "drop"
  ) |> 
  mutate(
    Ingreso_Promedio = scales::dollar(Ingreso_Promedio, big.mark = ".", decimal.mark = ",", prefix = "$"),
    Ingreso_Mediano = scales::dollar(Ingreso_Mediano, big.mark = ".", decimal.mark = ",", prefix = "$")
  ) |> 
  kable(
    caption = "Ingresos del trabajo por nivel educacional",
    col.names = c("Nivel Educacional", "N", "Ingreso Promedio", "Ingreso Mediano")
  )
```

### Visualización: Ingresos por educación

```{r}
#| label: fig-ingresos-educacion
#| fig-cap: "Ingresos medianos por nivel educacional"
#| fig-width: 10
#| fig-height: 7
#| warning: false

esi2024 |> 
  filter(!is.na(nivel_etiq)) |> 
  group_by(nivel_etiq) |> 
  summarise(
    ingreso_mediano = median(ing_t_t, na.rm = TRUE),
    .groups = "drop"
  ) |> 
  mutate(nivel_etiq = fct_reorder(nivel_etiq, ingreso_mediano)) |> 
  ggplot(aes(x = nivel_etiq, y = ingreso_mediano)) +
  geom_col(fill = "#69000C", alpha = 0.7) +
  geom_text(
    aes(label = scales::dollar(ingreso_mediano, big.mark = ".", prefix = "$", accuracy = 1)),
    hjust = -0.1, size = 3
  ) +
  coord_flip() +
  scale_y_continuous(
    labels = scales::dollar_format(big.mark = ".", prefix = "$"),
    limits = c(0, max(esi2024 |> 
                        filter(!is.na(nivel_etiq)) |> 
                        group_by(nivel_etiq) |> 
                        summarise(med = median(ing_t_t, na.rm = TRUE)) |> 
                        pull(med)) * 1.15),
    expand = c(0, 0)
  ) +
  labs(
    title = "Ingreso Mediano del Trabajo por Nivel Educacional",
    subtitle = "Chile, 2024",
    x = NULL,
    y = "Ingreso mediano mensual",
    caption = "Fuente: INE, ESI 2024"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14),
    panel.grid.major.y = element_blank()
  )
```

::: {.callout-tip}
## Interpretación
Observamos una clara **relación positiva** entre nivel educacional e ingresos: a mayor educación, mayores ingresos medianos. Este es uno de los hallazgos más robustos en economía laboral y justifica (en parte) la inversión en educación como una forma de movilidad social.

Sin embargo, noten que el "salto" más grande está en los niveles más altos de educación (de media completa a superior y de superior a postgrado). ¿Por qué se produce este salto? ¿Es solo por un aumento lineal (exponencial en rigor) en el ingreso *en función* de los años estudiando, o bien hay algo que impacta en el salario y no se puede ver en el gráfico?
:::

---

## 9. Ejercicios prácticos

Ahora es tu turno de practicar con el dataframe simulado `encuesta`. Estos ejercicios te ayudarán a consolidar los conceptos aprendidos.

Primero, creemos el dataframe de práctica:

```{r}
#| label: crear-encuesta-practica

# Simular datos de encuesta para ejercicios
set.seed(123)  # Para reproducibilidad

encuesta <- data.frame(
  id = 1:100,
  edad = sample(18:65, 100, replace = TRUE),
  sexo = sample(c("Mujer", "Hombre"), 100, 
                replace = TRUE, prob = c(0.52, 0.48)),
  educacion = sample(c("Básica", "Media", "Técnica", "Universitaria", "Postgrado"), 
                     100, replace = TRUE, 
                     prob = c(0.10, 0.30, 0.25, 0.30, 0.05)),
  satisfaccion = sample(1:7, 100, replace = TRUE),
  ingreso = round(rnorm(100, mean = 800000, sd = 300000), -3)
)

# Vista previa
head(encuesta, 10)
```

---

::: {.callout-tip}
## Ejercicio 1: Calcular estadísticos básicos

Usando los datos de `encuesta`:

a) Calcula la edad promedio y mediana
b) Calcula el ingreso promedio y mediano
c) ¿Cuál es la satisfacción promedio?
d) Interpreta: ¿La distribución de ingresos está sesgada? ¿Cómo lo sabes?

**Pista:** Usa las funciones `mean()` y `median()`. Compara los resultados.
:::

```{r}
#| label: ejercicio-1-template
#| eval: false
#| code-fold: true

# a) Edad
mean(encuesta$edad)
median(encuesta$edad)

# b) Ingreso


# c) Satisfacción


# d) Interpretación
# Escribe tu respuesta aquí

```

::: {.callout-tip collapse="true"}
## Solución Ejercicio 1

```{r}
#| label: solucion-1

# a) Edad promedio y mediana
cat("Edad promedio:", round(mean(encuesta$edad), 1), "años\n")
cat("Edad mediana:", median(encuesta$edad), "años\n\n")

# b) Ingreso promedio y mediano
cat("Ingreso promedio:", scales::dollar(mean(encuesta$ingreso), prefix = "$", big.mark = "."), "\n")
cat("Ingreso mediano:", scales::dollar(median(encuesta$ingreso), prefix = "$", big.mark = "."), "\n\n")

# c) Satisfacción promedio
cat("Satisfacción promedio:", round(mean(encuesta$satisfaccion), 2), "(escala 1-7)\n\n")

# d) Interpretación
cat("Interpretación:\n")
cat("Media:", scales::dollar(mean(encuesta$ingreso), prefix = "$", big.mark = "."), "\n")
cat("Mediana:", scales::dollar(median(encuesta$ingreso), prefix = "$", big.mark = "."), "\n")
cat("\nLa media es", 
    ifelse(mean(encuesta$ingreso) > median(encuesta$ingreso), "mayor", "menor"),
    "que la mediana, lo que sugiere un sesgo",
    ifelse(mean(encuesta$ingreso) > median(encuesta$ingreso), "positivo (hacia la derecha)", "negativo (hacia la izquierda)"),
    "en la distribución de ingresos.")
```
:::

---

::: {.callout-tip}
## Ejercicio 2: Tabla de frecuencias

Crea una tabla de frecuencias para la variable `educacion` que incluya:
- Frecuencia absoluta
- Frecuencia relativa (porcentaje)
- Porcentaje acumulado

**Pista:** Usa `table()`, `prop.table()` y `cumsum()`
:::

```{r}
#| label: ejercicio-2-template
#| eval: false
#| code-fold: true

# Tu código aquí
# 1. Crear tabla de frecuencias absolutas


# 2. Calcular porcentajes


# 3. Agregar porcentaje acumulado


# 4. Presentar en formato tabla (usa kable)

```

::: {.callout-tip collapse="true"}
## Solución Ejercicio 2

```{r}
#| label: solucion-2

# Crear tabla de frecuencias completa
tabla_educ <- as.data.frame(table(encuesta$educacion))
colnames(tabla_educ) <- c("Nivel_Educacional", "Frecuencia")

tabla_educ <- tabla_educ |> 
  mutate(
    Porcentaje = round((Frecuencia / sum(Frecuencia)) * 100, 1),
    Porcentaje_Acumulado = cumsum(Porcentaje)
  )

# Mostrar con kable
kable(
  tabla_educ,
  caption = "Distribución de nivel educacional",
  col.names = c("Nivel Educacional", "Frecuencia", "Porcentaje (%)", "% Acumulado")
)
```
:::

---

::: {.callout-tip}
## Ejercicio 3: Tabla de contingencia

Crea una tabla de contingencia entre `sexo` y `educacion`.

a) ¿Cuántos hombres tienen educación universitaria?
b) ¿Cuántas mujeres tienen educación media?
c) Calcula las proporciones por fila (% dentro de cada sexo)
d) ¿Qué porcentaje de las mujeres tiene educación universitaria?

**Pista:** Usa `table()` y `prop.table()` con `margin = 1` para proporciones por fila
:::

```{r}
#| label: ejercicio-3-template
#| eval: false
#| code-fold: true

# a) y b) Crear tabla de contingencia


# c) Proporciones por fila


# d) Interpretación

```

::: {.callout-tip collapse="true"}
## Solución Ejercicio 3

```{r}
#| label: solucion-3

# a) y b) Tabla de contingencia
tabla_sexo_educ <- table(encuesta$sexo, encuesta$educacion)
print("Tabla de contingencia: Sexo x Educación")
tabla_sexo_educ

cat("\na) Hombres con educación universitaria:", tabla_sexo_educ["Hombre", "Universitaria"], "\n")
cat("b) Mujeres con educación media:", tabla_sexo_educ["Mujer", "Media"], "\n\n")

# c) Proporciones por fila (% dentro de cada sexo)
prop_fila <- prop.table(tabla_sexo_educ, margin = 1) * 100
print("Porcentajes por sexo:")
round(prop_fila, 1)

# d) Porcentaje de mujeres con educación universitaria
cat("\nd) Porcentaje de mujeres con educación universitaria:", 
    round(prop_fila["Mujer", "Universitaria"], 1), "%")
```
:::

## Ejercicio 4: Análisis de ingresos por grupo

Ahora realizaremos un análisis más complejo, comparando ingresos entre diferentes grupos.

::: {.callout-tip}
## Ejercicio 4: Ingresos por sexo y educación

Usando el dataframe `encuesta`:

a) Calcula el ingreso promedio y mediano por sexo
b) Calcula el ingreso promedio por nivel educacional
c) Crea un gráfico de boxplot comparando ingresos entre hombres y mujeres
d) Interpreta: ¿Existe una brecha salarial en estos datos simulados?

**Pista:** Usa `group_by()` y `summarise()` de `dplyr`, y `ggplot()` para el gráfico
:::

```{r}
#| label: ejercicio-4-template
#| eval: false
#| code-fold: true

# a) Ingresos por sexo
encuesta |> 
  group_by(sexo) |> 
  summarise(
    # completar aquí
  )

# b) Ingresos por educación


# c) Boxplot


# d) Interpretación
# Escribe tu análisis aquí

```

::: {.callout-tip collapse="true"}
## Solución Ejercicio 4

```{r}
#| label: solucion-4

# a) Ingresos por sexo
cat("=== Ingresos por sexo ===\n\n")
resumen_sexo <- encuesta |> 
  group_by(sexo) |> 
  summarise(
    n = n(),
    Ingreso_Promedio = mean(ingreso, na.rm = TRUE),
    Ingreso_Mediano = median(ingreso, na.rm = TRUE),
    .groups = "drop"
  ) |> 
  mutate(
    Ingreso_Promedio = scales::dollar(Ingreso_Promedio, prefix = "$", big.mark = "."),
    Ingreso_Mediano = scales::dollar(Ingreso_Mediano, prefix = "$", big.mark = ".")
  )

kable(resumen_sexo, 
      caption = "Ingresos por sexo",
      col.names = c("Sexo", "N", "Ingreso Promedio", "Ingreso Mediano"))

# b) Ingresos por educación
cat("\n=== Ingresos por nivel educacional ===\n\n")
resumen_educ <- encuesta |> 
  group_by(educacion) |> 
  summarise(
    n = n(),
    Ingreso_Promedio = mean(ingreso, na.rm = TRUE),
    Ingreso_Mediano = median(ingreso, na.rm = TRUE),
    .groups = "drop"
  ) |> 
  arrange(desc(Ingreso_Mediano)) |> 
  mutate(
    Ingreso_Promedio = scales::dollar(Ingreso_Promedio, prefix = "$", big.mark = "."),
    Ingreso_Mediano = scales::dollar(Ingreso_Mediano, prefix = "$", big.mark = ".")
  )

kable(resumen_educ,
      caption = "Ingresos por nivel educacional",
      col.names = c("Educación", "N", "Ingreso Promedio", "Ingreso Mediano"))
```

```{r}
#| label: solucion-4-grafico
#| fig-cap: "Comparación de ingresos por sexo"
#| fig-width: 8
#| fig-height: 6

# c) Boxplot de ingresos por sexo
ggplot(encuesta, aes(x = sexo, y = ingreso, fill = sexo)) +
  geom_boxplot(alpha = 0.7) +
  scale_y_continuous(
    labels = scales::dollar_format(prefix = "$", big.mark = ".")
  ) +
  scale_fill_manual(values = c("Hombre" = "#4292c6", "Mujer" = "#ef3b2c")) +
  labs(
    title = "Distribución de Ingresos por Sexo",
    subtitle = "Datos simulados de encuesta",
    x = NULL,
    y = "Ingreso mensual",
    caption = "Fuente: Datos simulados para ejercicio"
  ) +
  theme_minimal() +
  theme(
    legend.position = "none",
    plot.title = element_text(face = "bold", size = 13)
  )

# d) Interpretación
cat("\n=== Interpretación ===\n\n")
media_h <- mean(encuesta$ingreso[encuesta$sexo == "Hombre"])
media_m <- mean(encuesta$ingreso[encuesta$sexo == "Mujer"])
brecha <- ((media_h - media_m) / media_h) * 100

cat("En estos datos simulados:\n")
cat("- Ingreso promedio hombres:", scales::dollar(media_h, prefix = "$", big.mark = "."), "\n")
cat("- Ingreso promedio mujeres:", scales::dollar(media_m, prefix = "$", big.mark = "."), "\n")
cat("- Brecha salarial:", round(brecha, 1), "%\n\n")

if (brecha > 5) {
  cat("Existe una brecha salarial favorable a los hombres del", round(brecha, 1), "%.\n")
  cat("Esto significa que, en promedio, las mujeres ganan", 
      round(100 - (media_m/media_h * 100), 1), 
      "% menos que los hombres en esta muestra simulada.")
} else if (brecha < -5) {
  cat("Existe una brecha salarial favorable a las mujeres del", round(abs(brecha), 1), "%.")
} else {
  cat("No se observa una brecha salarial significativa (diferencia menor al 5%).")
}
```
:::

---

::: {.callout-tip}
## Ejercicio 5: Visualización avanzada

Crea un gráfico que muestre la distribución de edad por nivel educacional.

Puedes elegir entre:
- Un histograma facetado por educación
- Un boxplot con educación en el eje X y edad en el eje Y
- Un gráfico de violín

**Bonus:** Agrega títulos, etiquetas y personaliza los colores.
:::

```{r}
#| label: ejercicio-5-template
#| eval: false
#| code-fold: true

# Tu código aquí
# Crea el gráfico que prefieras usando ggplot()

```

::: {.callout-tip collapse="true"}
## Solución Ejercicio 5

```{r}
#| label: solucion-5-opcion1
#| fig-cap: "Distribución de edad por nivel educacional (boxplot)"
#| fig-width: 10
#| fig-height: 6

# Opción 1: Boxplot
ggplot(encuesta, aes(x = educacion, y = edad, fill = educacion)) +
  geom_boxplot(alpha = 0.7) +
  geom_jitter(width = 0.2, alpha = 0.3, size = 0.8) +  # Agregar puntos individuales
  scale_fill_brewer(palette = "Set2") +
  labs(
    title = "Distribución de Edad según Nivel Educacional",
    subtitle = "Datos simulados de encuesta (N=100)",
    x = "Nivel Educacional",
    y = "Edad (años)",
    caption = "Fuente: Datos simulados para ejercicio"
  ) +
  theme_minimal() +
  theme(
    legend.position = "none",
    plot.title = element_text(face = "bold", size = 13),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )
```

```{r}
#| label: solucion-5-opcion2
#| fig-cap: "Distribución de edad por nivel educacional (violín)"
#| fig-width: 10
#| fig-height: 6

# Opción 2: Gráfico de violín
ggplot(encuesta, aes(x = educacion, y = edad, fill = educacion)) +
  geom_violin(alpha = 0.6, trim = FALSE) +
  geom_boxplot(width = 0.1, alpha = 0.8, outlier.alpha = 0) +
  scale_fill_viridis_d(option = "plasma") +
  labs(
    title = "Distribución de Edad según Nivel Educacional",
    subtitle = "Gráfico de violín con boxplot incorporado",
    x = "Nivel Educacional",
    y = "Edad (años)",
    caption = "Fuente: Datos simulados para ejercicio\nEl ancho del violín representa la densidad de datos"
  ) +
  theme_minimal() +
  theme(
    legend.position = "none",
    plot.title = element_text(face = "bold", size = 13),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )
```

```{r}
#| label: solucion-5-opcion3
#| fig-cap: "Histogramas de edad por nivel educacional"
#| fig-width: 12
#| fig-height: 8

# Opción 3: Histogramas facetados
ggplot(encuesta, aes(x = edad, fill = educacion)) +
  geom_histogram(bins = 15, alpha = 0.8, color = "white") +
  facet_wrap(~educacion, ncol = 3) +
  scale_fill_brewer(palette = "Set1") +
  labs(
    title = "Distribución de Edad por Nivel Educacional",
    subtitle = "Histogramas separados para cada categoría",
    x = "Edad (años)",
    y = "Frecuencia",
    caption = "Fuente: Datos simulados para ejercicio"
  ) +
  theme_minimal() +
  theme(
    legend.position = "none",
    plot.title = element_text(face = "bold", size = 13),
    strip.text = element_text(face = "bold", size = 10)
  )
```
:::

---

## 10. Resumen de la sesión

En esta primera sesión hemos cubierto aspectos fundamentales tanto de R como de estadística descriptiva:

### ✅ Conceptos de R aprendidos

- **Interfaz de RStudio**: Navegación entre paneles (Editor, Consola, Environment, Files/Plots)
- **Operaciones básicas**: R como calculadora avanzada
- **Creación de objetos**: Vectores, matrices y dataframes
- **Operaciones vectoriales y matriciales**: Incluyendo álgebra lineal
- **Importación de datos**: Archivos CSV y Stata (.dta)
- **Manipulación de datos con `dplyr`**: 
  - `select()`: Seleccionar columnas
  - `filter()`: Filtrar filas
  - `mutate()`: Crear/modificar variables
  - `group_by()` y `summarise()`: Agrupar y resumir
  - Operador pipe `|>`: Encadenar operaciones
- **Exploración de datos**: `glimpse()`, `head()`, `str()`, `dim()`
- **Visualización con `ggplot2`**: Histogramas, boxplots, gráficos de barras

### ✅ Conceptos estadísticos aprendidos

- **Medidas de tendencia central**:
  - Media: Promedio aritmético, sensible a valores extremos
  - Mediana: Valor central, robusta a outliers
  - Cuándo usar cada una según la distribución de los datos
  
- **Distribuciones asimétricas**: Interpretación de sesgo positivo/negativo comparando media y mediana

- **Tablas de frecuencia**:
  - Frecuencias absolutas y relativas
  - Frecuencias acumuladas
  - Tablas de contingencia (cruce de dos variables)
  - Proporciones por fila y columna

- **Análisis bivariado descriptivo**:
  - Comparación de estadísticos entre grupos
  - Identificación de brechas (ej: brecha salarial de género)
  - Visualización de diferencias entre grupos

- **Interpretación de gráficos**:
  - Histogramas: Forma de la distribución
  - Boxplots: Mediana, rango intercuartílico, outliers
  - Gráficos de barras: Frecuencias y proporciones

### 🎯 Aplicaciones prácticas

Trabajamos con dos bases de datos reales:
1. **ENE (Encuesta Nacional de Empleo)**: Cálculo de tasas de ocupación
2. **ESI (Encuesta Suplementaria de Ingresos)**: Análisis de ingresos, brechas salariales, y retornos a la educación

Estos análisis nos permitieron ver cómo la estadística descriptiva es fundamental para:
- **Caracterizar** poblaciones y muestras
- **Identificar** patrones y tendencias
- **Comparar** grupos (género, educación, edad)
- **Comunicar** hallazgos de manera efectiva

---

## 11. Recursos adicionales

### 📚 Lecturas recomendadas

**Sobre R:**
- Wickham, H., & Grolemund, G. (2023). [*R para Ciencia de Datos*](https://es.r4ds.hadley.nz/). Capítulos 1-5 y 9-11.
- Fernández-Avilés, G., & Montero, J.M. (2024). [*Ciencia de Datos en R*](https://cdr-book.github.io/index.html). Capítulos 1-3.
- Wickham, H. (2019). [*Advanced R*](https://adv-r.hadley.nz/). Para profundizar en programación orientada a objetos.

**Sobre Estadística Descriptiva:**
- Navarro, D. (2015). [*Learning Statistics with R*](https://learningstatisticswithr.com/). Capítulos 3-5.
- Verzani, J. (2014). *Using R for Introductory Statistics*. Capítulos 1-4.

**Documentación oficial:**
- [Documentación de `dplyr`](https://dplyr.tidyverse.org/)
- [Documentación de `ggplot2`](https://ggplot2.tidyverse.org/)
- [RStudio Cheatsheets](https://posit.co/resources/cheatsheets/) (especialmente Data Transformation y Data Visualization)

### 🎥 Videos recomendados

- [Introducción a RStudio (10 min)](https://www.youtube.com/watch?v=lVKMsaWju8w)
- [R para principiantes - Tutorial completo](https://www.youtube.com/watch?v=_V8eKsto3Ug)
- [Visualización de datos con ggplot2](https://www.youtube.com/watch?v=h29g21z0a68)

### 💻 Práctica interactiva

- [Swirl - Learn R, in R](https://swirlstats.com/) - Tutorial interactivo dentro de R
- [R for Data Science - Ejercicios](https://r4ds.hadley.nz/data-transform.html#exercises-9)
- [DataCamp - Introduction to R (gratis)](https://www.datacamp.com/courses/free-introduction-to-r)

### 🔗 Bases de datos para practicar

- [Encuesta Nacional de Empleo (ENE) - INE Chile](https://www.ine.gob.cl/estadisticas/sociales/mercado-laboral/ocupacion-y-desocupacion)
- [Encuesta Suplementaria de Ingresos (ESI) - INE Chile](https://www.ine.gob.cl/estadisticas/sociales/ingresos-y-gastos/encuesta-suplementaria-de-ingresos)
- [CASEN - Ministerio de Desarrollo Social](http://observatorio.ministeriodesarrollosocial.gob.cl/encuesta-casen)
- [Datasets incluidos en R](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/00Index.html)

---

## 12. Preparación para la próxima sesión

En la **Sesión 2** continuaremos con estadística descriptiva, enfocándonos en:

1. **Medidas de dispersión**:
   - Rango, varianza, desviación estándar
   - Rango intercuartílico
   - Coeficiente de variación

2. **Medidas de posición**:
   - Cuartiles, deciles, percentiles
   - Interpretación y aplicaciones

3. **Introducción a pruebas de hipótesis**:
   - Conceptos básicos de inferencia estadística
   - Distribución normal
   - Intervalos de confianza

### 📝 Tarea para la próxima sesión

::: {.callout-important}
## Tarea obligatoria

Elige **una** de las siguientes bases de datos y realiza un análisis descriptivo básico:

**Opción 1: ENE (Encuesta Nacional de Empleo)**
- Descarga: [ENE más reciente](https://www.ine.gob.cl/estadisticas/sociales/mercado-laboral/ocupacion-y-desocupacion)
- Analiza: Tasas de participación laboral por región y sexo

**Opción 2: ESI (Encuesta Suplementaria de Ingresos)**
- Ya usamos esta base en clase
- Analiza: Ingresos por región y sector económico

**Opción 3: Base de datos propia**
- Si tienes datos de tu investigación de magíster, úsalos
- Realiza análisis descriptivo básico

**Entregables (documento .Rmd o .qmd):**

1. Breve descripción de la base de datos (origen, año, n° observaciones)
2. Selección de 3-4 variables de interés
3. Análisis descriptivo que incluya:
   - Tablas de frecuencia para variables categóricas
   - Medidas de tendencia central para variables numéricas
   - Al menos 2 visualizaciones (gráficos)
4. Interpretación de los resultados (2-3 párrafos)

**Formato de entrega:**
- Archivo .Rmd o .qmd con código y texto
- Renderizado a HTML o PDF
- Fecha límite: Antes de la Sesión 2
:::

### 💡 Consejos para la tarea

- Revisa el código de esta sesión como referencia
- Usa comentarios (`#`) para explicar tu código
- Sigue las buenas prácticas: nombres descriptivos de objetos, código indentado
- Si tienes dudas, consulta la documentación: `?nombre_funcion`
- Practica el flujo: importar → explorar → limpiar → analizar → visualizar

---

## 13. Código completo de la sesión

Si quieres replicar todo el análisis de esta sesión, aquí está el código completo:

```{r}
#| label: codigo-completo
#| eval: false
#| code-fold: true
#| code-summary: "Ver código completo de la sesión"

# ============================================
# SESIÓN 1: CÓDIGO COMPLETO
# Taller de Métodos y Técnicas de Investigación I
# ============================================

# 1. PREPARACIÓN ----
library(tidyverse)
library(psych)
library(sjmisc)
library(haven)
options(scipen = 999)

# 2. CARGAR ENE ----
datos <- read.csv("data-sesiones/ene-2025-07-jja.csv",
                  sep = ";",
                  encoding = "Latin-1",
                  stringsAsFactors = FALSE)

# Explorar
glimpse(datos)
frq(datos$activ)

# Calcular tasa de ocupación (muestral)
toc_muestra <- datos |>
  mutate(
    oc = activ == 1,
    may15 = edad >= 15
  ) |>
  filter(may15, !is.na(activ)) |>
  summarise(toc = mean(oc)) |>
  pull(toc)

cat("Tasa de ocupación muestral:", round(toc_muestra * 100, 2), "%\n")

# 3. CARGAR ESI ----
esi2024 <- haven::read_dta("https://www.ine.gob.cl/docs/default-source/encuesta-suplementaria-de-ingresos/bbdd/stata_esi/2024/esi_2024.dta?sfvrsn=627c0f59_4&download=true")

# Preparar datos
esi_trabajo <- esi2024 |>
  select(sexo, edad, nivel, ing_t_t, activ, region) |>
  filter(activ == 1, !is.na(ing_t_t), ing_t_t > 0) |>
  mutate(
    sexo_etiq = case_when(
      sexo == 1 ~ "Hombre",
      sexo == 2 ~ "Mujer",
      TRUE ~ "Otro"
    ),
    nivel_etiq = case_when(
      nivel == 1 ~ "Sin educación",
      nivel == 2 ~ "Básica incompleta",
      nivel == 3 ~ "Básica completa",
      nivel == 4 ~ "Media incompleta",
      nivel == 5 ~ "Media completa",
      nivel == 6 ~ "Técnica incompleta",
      nivel == 7 ~ "Técnica completa",
      nivel == 8 ~ "Universitaria incompleta",
      nivel == 9 ~ "Universitaria completa",
      nivel == 10 ~ "Postgrado",
      TRUE ~ "Sin información"
    )
  )

# 4. ESTADÍSTICA DESCRIPTIVA ----

# Media y mediana de ingresos
mean(esi_trabajo$ing_t_t)
median(esi_trabajo$ing_t_t)

# Por sexo
esi_trabajo |>
  group_by(sexo_etiq) |>
  summarise(
    n = n(),
    Media = mean(ing_t_t),
    Mediana = median(ing_t_t)
  )

# 5. VISUALIZACIONES ----

# Histograma con media y mediana
ggplot(esi_trabajo, aes(x = ing_t_t)) +
  geom_histogram(bins = 50, fill = "steelblue", alpha = 0.7) +
  geom_vline(aes(xintercept = mean(ing_t_t), color = "Media"),
             linewidth = 1.2, linetype = "dashed") +
  geom_vline(aes(xintercept = median(ing_t_t), color = "Mediana"),
             linewidth = 1.2, linetype = "dashed") +
  scale_x_continuous(limits = c(0, 3000000)) +
  theme_minimal()

# Boxplot por sexo
ggplot(esi_trabajo, aes(x = sexo_etiq, y = ing_t_t, fill = sexo_etiq)) +
  geom_boxplot(alpha = 0.7) +
  scale_y_continuous(limits = c(0, 2500000)) +
  theme_minimal()

# 6. TABLAS DE FRECUENCIA ----

# Tabla educación
table(esi_trabajo$nivel_etiq)
prop.table(table(esi_trabajo$nivel_etiq)) * 100

# Tabla de contingencia
table(esi_trabajo$sexo_etiq, esi_trabajo$nivel_etiq)

# 7. EJERCICIOS CON DATOS SIMULADOS ----
set.seed(123)
encuesta <- data.frame(
  id = 1:100,
  edad = sample(18:65, 100, replace = TRUE),
  sexo = sample(c("Mujer", "Hombre"), 100, replace = TRUE, prob = c(0.52, 0.48)),
  educacion = sample(c("Básica", "Media", "Técnica", "Universitaria", "Postgrado"),
                     100, replace = TRUE, prob = c(0.10, 0.30, 0.25, 0.30, 0.05)),
  satisfaccion = sample(1:7, 100, replace = TRUE),
  ingreso = round(rnorm(100, mean = 800000, sd = 300000), -3)
)

# Análisis básico
summary(encuesta)
table(encuesta$educacion)
```

---

::: {.callout-note}
## Nota final

Esta sesión establece las bases para todo el curso. Es fundamental que te sientas cómodo/a con:
- La lógica de programación en R
- La manipulación básica de datos
- El cálculo e interpretación de estadísticos descriptivos
- La creación de visualizaciones

Si algún concepto no quedó claro, **no dudes en consultar**. Los contenidos son acumulativos y necesitarás estas herramientas en todas las sesiones siguientes.

¡Nos vemos en la Sesión 2! 🚀
:::











